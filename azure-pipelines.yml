# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool: 'AWS'

steps:
  - task: CmdLine@2
    inputs:
      script: |
        docker build -t rkalluru/b48-$(appName):$(Build.BuildId) .
        docker push rkalluru/b48-$(appName):$(Build.BuildId)
    displayName: Docker Build Push

  - task: CmdLine@2
    inputs:
      script: |
        mkdir output
        cd output
        sed -e "s/BUILDNO/$(Build.BuildId)/" ../k8s/deployment.yml >deployment.yml
        sed -e "s/BUILDNO/$(Build.BuildId)/" ../k8s/service.yml >service.yml
        env
        pwd
    displayName: Update Kubernetes

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/output'
      ArtifactName: 'k8s-ouptuts'
      publishLocation: 'Container'
#- task: CmdLine@2
#  inputs:
#    script: 'sudo yum install pylint -y'
#
#- script: |
#    pylint payment.py || true
#    pylint rabbitmq.py || true
#  displayName: 'pytest'
#
#- task: CmdLine@2
#  inputs:
#    script: |
#      mkdir publish
#      mv payment.ini *.py requirements.txt publish
#      cd publish
#      az artifacts universal publish --organization https://dev.azure.com/DevOps-Batches/ --project="DevOps48" --scope project --feed RoboShop --name  $(appName) --version 1.0.$(Build.BuildId) --description "$(appName)" --path .
#  displayName: Publish Artifacts

variables:
  appName: "payment"